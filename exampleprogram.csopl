; Clearly does not prevent evaluation of the second argument
; type: (→ bool (→ bool bool))
(define and (λ x bool
              (if x
                  (λ y bool y)
                  (λ y bool false))))
(define or (λ x bool
             (if x
                 (λ y bool true)
                 (λ y bool y))))
; type: (→ bool bool)
(define not (λ x bool
              (if x
                  false
                  true)))

; Type abstraction
; type: ∀ T * (→ (→ T bool) (→ T bool))
(define reverse
  (Λ T *
     (λ x (→ T bool)
       (λ y T
         (not (x y))))))
; Type application
; type: (→ (→ int bool) (→ int bool))
(define reverseinttobool
  [reverse int])

; type: (→ int bool)
(define lessorequalthanone (λ n int (iszero (pred n))))

; type: (→ int bool)
(define morethanone (reverseinttobool lessorequalthanone))

; Operator abstraction works fine
(define plusfive
  (λ n
    ((λ T (⇒ * *) (T int))
     (λ X * X))
    (succ (succ (succ (succ (succ n)))))))


; type: ∀ T * (→ (→ T T) (→ T T))
(define applytwice
  (Λ T *
     (λ f (→ T T)
       (λ x T (f (f x))))))
; type: (→ (→ int int) (→ int int))
(define applyinttwice [applytwice int])
; type: (→ (→ (→ int int) (→ int int))
;          (→ (→ int int) (→ int int)))
(define applyinttointtwice [applytwice (→ int int)])
; type: (→ (→ int int) (→ int int))
(define applyfourtimes (applyinttointtwice applyinttwice))
; type: (→ (→ int int) (→ int int))
(define applysixteentimes (applyinttointtwice applyfourtimes))
; type: (→ (→ int int) (→ int int))
(define applytwofivesixtimes (applyinttointtwice applysixteentimes))
; Adds 1280 (= 5*2^8)
; type: (→ int int)
(define plusthousandsomesuch (applytwofivesixtimes plusfive))
; Remove 2^9
; type: (→ int int)
(define minustwotonine (applytwofivesixtimes (λ x int (pred (pred x)))))
; Remove 32
; type: (→ int int)
(define minusthirtytwo (applyinttwice (applysixteentimes (λ x int (pred x)))))

; aah numbers
; type: int
(define whatishappening
  (minusthirtytwo
   (minustwotonine
    (plusthousandsomesuch
     (plusthousandsomesuch 0)))))

; type: int
(if ((and (lessorequalthanone (succ 0)))
          (morethanone (plusfive 0)))
    (pred whatishappening) ; 2015 :)
    0) ; Come back again next year
