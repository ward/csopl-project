; TODO run through drracket's indenter

; Wrong plusfive
(define plusfive (λ n int (succ 0)))
(define minustwo (λ n int (pred (pred n))))
; Correct plusfive by overriding
(define plusfive (λ n int (succ (succ (succ (succ (succ n)))))))

; Type abstraction
(define idgeneric (Λ X * (λ x X x)))
; Type application
(define idint [idgeneric int])
(define idinttobool [idgeneric (→ int bool)])

(define isone (λ n int (iszero (pred n))))

((idinttobool isone) (idint (succ 0)))

; Works
(define clearinttointTOinttoint (λ x (→ int int) x))
(clearinttointTOinttoint (λ x int x))
; The following will fail due to no type equivalence
(define obscureinttointTOinttoint
	(λ x
		((λ T * (→ T T)) int)
		x))
(
	obscureinttointTOinttoint
	(λ x int x))
